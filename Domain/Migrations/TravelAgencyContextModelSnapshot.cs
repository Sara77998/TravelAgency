// <auto-generated />
using System;
using Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domain.Migrations
{
    [DbContext(typeof(TravelAgencyContext))]
    partial class TravelAgencyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Domain.Agent", b =>
                {
                    b.Property<int>("AgentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TuristickaAgencijaID")
                        .HasColumnType("int");

                    b.HasKey("AgentID");

                    b.HasIndex("TuristickaAgencijaID");

                    b.ToTable("Agenti");
                });

            modelBuilder.Entity("Domain.Gost", b =>
                {
                    b.Property<int>("GostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GostID");

                    b.ToTable("Gosti");
                });

            modelBuilder.Entity("Domain.Hotel", b =>
                {
                    b.Property<int>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BrojZvezdinca")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zemlja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelID");

                    b.ToTable("Hoteli");
                });

            modelBuilder.Entity("Domain.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AgentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumDo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumOd")
                        .HasColumnType("datetime2");

                    b.Property<int>("SobaID")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaID");

                    b.HasIndex("AgentID");

                    b.HasIndex("SobaID");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("Domain.Soba", b =>
                {
                    b.Property<int>("SobaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojSobe")
                        .HasColumnType("int");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<string>("TipSobe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Zauzeta")
                        .HasColumnType("bit");

                    b.HasKey("SobaID");

                    b.HasIndex("HotelID");

                    b.ToTable("Sobe");
                });

            modelBuilder.Entity("Domain.StavkaRezervacije", b =>
                {
                    b.Property<int>("StavkaRezervacijeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GostID")
                        .HasColumnType("int");

                    b.Property<int>("RB")
                        .HasColumnType("int");

                    b.Property<int?>("RezervacijaID")
                        .HasColumnType("int");

                    b.HasKey("StavkaRezervacijeID");

                    b.HasIndex("GostID");

                    b.HasIndex("RezervacijaID");

                    b.ToTable("StavkeRezervacije");
                });

            modelBuilder.Entity("Domain.TuristickaAgencija", b =>
                {
                    b.Property<int>("TuristickaAgencijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TuristickaAgencijaID");

                    b.ToTable("TuristickeAgencije");
                });

            modelBuilder.Entity("Domain.Agent", b =>
                {
                    b.HasOne("Domain.TuristickaAgencija", "TuristickaAgencija")
                        .WithMany()
                        .HasForeignKey("TuristickaAgencijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TuristickaAgencija");
                });

            modelBuilder.Entity("Domain.Rezervacija", b =>
                {
                    b.HasOne("Domain.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Soba", "Soba")
                        .WithMany()
                        .HasForeignKey("SobaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Soba");
                });

            modelBuilder.Entity("Domain.Soba", b =>
                {
                    b.HasOne("Domain.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Domain.StavkaRezervacije", b =>
                {
                    b.HasOne("Domain.Gost", "Gost")
                        .WithMany()
                        .HasForeignKey("GostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Rezervacija", null)
                        .WithMany("StavkeRezervacije")
                        .HasForeignKey("RezervacijaID");

                    b.Navigation("Gost");
                });

            modelBuilder.Entity("Domain.Rezervacija", b =>
                {
                    b.Navigation("StavkeRezervacije");
                });
#pragma warning restore 612, 618
        }
    }
}
